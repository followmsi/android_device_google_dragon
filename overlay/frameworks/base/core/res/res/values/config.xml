<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2015, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources>

    <!-- This device is not "voice capable"; it's data-only. -->
    <bool name="config_voice_capable">false</bool>

    <!-- This device does not allow sms service. -->
    <bool name="config_sms_capable">false</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">8</integer>

    <!-- Whether UI for multi user should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <bool name="config_ui_enableFadingMarquee">true</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep
         and opening it causes the device to wake up. The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- Setting this true forces the headset jack switches to use the/dev/input/event subsystem
         rather than the uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Enable device idle mode -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <!-- If true, enables verification of the lockscreen credential in the factory reset protection
        flow. This should be true if gatekeeper / weaver credentials can still be checked after a
        factory reset.

        dragon's gatekeeper does not preserve credentials across factory resets. -->
    <bool name="config_enableCredentialFactoryResetProtection">false</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating whether the wifi chipset has background scan support -->
    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

    <!-- Boolean indicating whether or not to revert to default country code when cellular
         radio is unable to find any MCC information to infer wifi country code from -->
    <bool translatable="false" name="config_wifi_revert_country_code_on_cellular_loss">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>10</item>
        <item>40</item>
        <item>90</item>
        <item>125</item>
        <item>160</item>
        <item>190</item>
        <item>225</item>
        <item>290</item>
        <item>350</item>
        <item>500</item>
        <item>640</item>
        <item>1300</item>
        <item>2600</item>
        <item>5000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <!-- This will be converted to kernel brightness level in light HAL -->
        <item>1</item>     <!--  18 nit -->
        <item>17</item>    <!--  57 nit -->
        <item>33</item>    <!--  68 nit -->
        <item>49</item>    <!--  91 nit -->
        <item>65</item>    <!-- 125 nit -->
        <item>81</item>    <!-- 148 nit -->
        <item>97</item>    <!-- 170 nit -->
        <item>113</item>   <!-- 193 nit -->
        <item>129</item>   <!-- 216 nit -->
        <item>145</item>   <!-- 239 nit -->
        <item>161</item>   <!-- 273 nit -->
        <item>177</item>   <!-- 307 nit -->
        <item>193</item>   <!-- 364 nit -->
        <item>209</item>   <!-- 409 nit -->
        <item>225</item>   <!-- 455 nit -->
        <item>241</item>   <!-- 500 nit -->
    </integer-array>

    <!-- Minimum screen brightness setting allowed by the power manager.
          The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <string translatable="false" name="config_packagedKeyboardName">Pixel C Keyboard</string>

    <!-- Controls how we deal with externally connected physical keyboards.
         0 - When using this device, it is not clear for users to recognize when the physical
             keyboard is (should be) connected and when it is (should be) disconnected.  Most of
             phones and tablets with Bluetooth keyboard would fall into this category because the
             connected Bluetooth keyboard may or may not be nearby the host device.
         1 - When using this device, it is clear for users to recognize when the physical
             keyboard is (should be) connected and when it is (should be) disconnected.
             Devices with wired USB keyboard is one clear example.  Some 2-in-1 convertible
             tablets with dedicated keyboards may have the same affordance to wired USB keyboard.
    -->
    <integer translatable="false" name="config_externalHardKeyboardBehavior">1</integer>

    <!-- Whether WiFi display is supported by this device.
             There are many prerequisites for this feature to work correctly.
             Here are a few of them:
             * The WiFi radio must support WiFi P2P.
             * The WiFi radio must support concurrent connections to the WiFi display and
             to an access point.
             * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
             remote submix module.  This module is used to record and stream system
             audio output to the WiFi display encoder in the media server.
             * The remote submix module "audio.r_submix.default" must be installed on the device.
             * The device must be provisioned with HDCP keys (for protected content).
    -->
    <!-- <bool name="config_enableWifiDisplay">true</bool> -->

    <!-- True if the device supports persisting security logs across reboots. -->
    <bool name="config_supportPreRebootSecurityLogs">true</bool>

    <!-- Enable doze mode
         ComponentName of a dream to show whenever the system would otherwise have gone to sleep. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Doze: should the TYPE_PICK_UP_GESTURE sensor be used as a pulse signal. -->
    <bool name="config_dozePulsePickup">false</bool>

    <!-- Type of the double tap sensor. Empty if double tap is not supported.
    <string name="config_dozeDoubleTapSensorType" translatable="false">com.google.sensor.double_touch</string -->

    <!-- If true, the doze component is not started until after the screen has been turned off
         and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOff">true</bool>

    <!-- Specifies whether to decouple the interactive state of the device from the display on/off state. -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- Control whether Night display is available. This should only be enabled on devices
           with HWC 2.0 or higher. -->
    <bool name="config_nightDisplayAvailable">true</bool>

    <!-- Whether the device supports Smart Pixels
    <bool name="config_enableSmartPixels">true</bool> -->

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/arm64/boot.oat"</item>
        <item>"/system/framework/boot.vdex"</item>
        <item>"/system/framework/arm64/boot-framework.oat"</item>
        <item>"/system/framework/boot-framework.vdex"</item>
        <item>"/system/framework/arm64/boot-core-libart.oat"</item>
        <item>"/system/framework/boot-core-libart.vdex"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/oat/arm64/services.vdex"</item>
   </string-array>

    <!-- Whether or not swipe up gesture is enabled by default -->
    <bool name="config_swipe_up_gesture_default">true</bool>

    <!-- Whether or not swipe up gesture's opt-in setting is available on this device -->
    <bool name="config_swipe_up_gesture_setting_available">true</bool>

</resources>
